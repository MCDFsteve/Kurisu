name: Build and Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  release:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Wine (Linux only)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo dpkg --add-architecture i386
          sudo apt-get update
          sudo apt-get install -y wine64 wine32

      - name: Install Dependencies
        run: npm install

      - name: Build Electron App
        shell: bash
        run: |
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            npm run win
          elif [ "${{ matrix.os }}" = "macos-latest" ]; then
            npm run mac
          else
            npm run linux
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CSC_IDENTITY_AUTO_DISCOVERY: false

      - name: Build/Release Electron app
        uses: samuelmeuli/action-electron-builder@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          release: true
          mac_certs: ${{ secrets.mac_certs }}
          mac_certs_password: ${{ secrets.mac_certs_password }}
          windows_certs: ${{ secrets.windows_certs }}
          windows_certs_password: ${{ secrets.windows_certs_password }}
        env:
          CSC_IDENTITY_AUTO_DISCOVERY: false

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-build
          path: |
            dist/*.exe
            dist/*.dmg
            dist/*.AppImage
            dist/*.snap
            dist/*.deb
            dist/*.rpm
            dist/*.zip
            dist/*.tar.gz 